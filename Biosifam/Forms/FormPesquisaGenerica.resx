<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicBuscarArquivo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABCRJREFUWEe9lvtTWlcQx/1D+0N/aH9o2szECZp2MknaohRrp0kUJAKmjdXqGHmo
        NRqgCQi18RFRQdAgIA+Rt0mDUdORb3cP12hGrRd8fGd2GOaee/Zzdvfs3jqck96WtpArFLGRySOTzaNQ
        fI3t7R3p6ck6M4B7ygurzYO23lF8rx/ETW0PbnX0QWU0w2iywz4xhWhiXVp9VDUDpDayaH3QC83gM5hn
        gphMlLD0DxD5F3hFB18sAs5wAY8cL6A2mtA/5JDe/Fg1AbyKxHGtqQPj/igC5JSNHc7ny/Dm9oQtFMrw
        bQLBErBQfA+t5RkUynZphwNVDRCOJXFVqSMnJSzT5t7cgVM2hjgMws/n80CC3n08GYSiWVPZSFLVAPVN
        GjhX01jeqjjfd3iazWX3EKf3tSYHBob/rGxGqgpgxO5Gm8mFMOX58GnlG6WpuIvWLivi62mxZ1UAn99Q
        i1Duh/14Jycbv8c18av9b3E7WLIBXi4EoDM7RYXXdvoKABemi26H0WSjPrEtH6B78AmGZ9ew9OZsAHw7
        +MZwnyhSs5INcM/QB1ckK16uFYCNIUIUxdsd/aJjygZo1fXAE8vQCSr3vVZjgMh74KamB+lsTj6A/jcL
        xpcy8L8+Wwr4lzum0mBBPr8pH8AxMY3up7MIivtfOwCnkNt2O80OHmCyAXZ3dtHQYgCPFW4qxzk4zRgg
        8BYwTwdgeeoR+8oGYN1o1uLFeqnmNDAAh58HmGd6XuxZFQDr08YWrO5Whs9+TuUYA3MTGvdFcVffL+1W
        A8D15g5oBmxiFsi5kgzJa3j9HA2wepqiqXRO2q0KgNLWO6i03TBYndD2jUL72IZVuk5+akxcE+zkMMyH
        /wTAs8O5uoGrTQ8QivJIOpAsgNLWNu7cfQiD5Tk8gQSMQ04oVDp8ovgBU8ktJGkNn9BHtcF9giPDHTO0
        XRnD9wadqFdqEIkd/TI6FSBF33hf/2jAw5EJeIIJEQGlpht75bJ43qhqR4PagEfjMxjzbcAdz9CXUBbW
        mSh0lgl81qDCuHNSrD1O/wuQyRfR2KJH15BLnPyXP9y49XMX3d930oqKdnZ34HBPw/C7FT9Rx7xv7EOv
        eQyzNMBO04kAa4kUvmk1otc2RSePo2vEhUZ15xHnZ9WxAMmNHIW1E32OGTxfjAiIBrWeqpe+KM5ZRwAC
        oTVcudMG08Q8OQ+j3z4lIpHOUXVdgD4CWAnH8OW3Gphcc+Q8Sr9ear96rCVT0orz1weAl4vLUFA1D0/6
        xMnNBPHF7ftIHmoaFyEB4F8J4zrl3OJehMMbwtBfPlz5TiPScdGqy2++wTVVJ0ang7DPhQhiQURiZTUm
        LblY1fFd/0rZAZc/hicEoaBq53RclurK1NEGxlzUp3Wop0j4VyLSo8uRqAGG4EgUKB2XK+A/W6cPxnEr
        aC8AAAAASUVORK5CYII=
</value>
  </data>
</root>